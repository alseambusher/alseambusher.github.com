<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=1024" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <title>A glance into HTML5 and CSS3</title>
    
    <meta name="description" content="" />
    <meta name="author" content="Suresh Alse" />

    <link href="impress.css" rel="stylesheet" />
    
    <link rel="shortcut icon" href="favicon.png" />
    <link rel="apple-touch-icon" href="apple-touch-icon.png" />
</head>
<body class="impress-not-supported">

<div class="fallback-message">
    <p>This presentation cannot be viewed in your browser.</p>
    <p>For the best experience please use the latest <b>Chrome</b>, <b>Safari</b> or <b>Firefox</b> browser.</p>
</div>
<div id="impress">

 
    <div id="title" class="step" data-x="0" data-y="0" data-scale="4">
        <h1>A glance into HTML5</h1>
        <span class="footnote">Suresh Alse</span>
    </div>

    <div class="step slide" data-x="-1000" data-y="-1500">
        <h1>Overview</h1> <hr />
        <p>HTML5 is the next major revision of the HTML standard superseding <b>HTML 4.01, XHTML 1.0, and XHTML 1.1</b>.</p>
        <br />
        <p>A cooperation between the <b>World Wide Web Consortium (W3C)</b> and the <b>Web Hypertext Application Technology Working Group (WHATWG)</b> produced HTML5.</p>
        <br />
        <p>HTML5 is designed, as much as possible, to be <b>backward compatible</b> with existing web browsers. New features build on existing features and allow you to provide <b>fallback content</b> for older browsers.</p>

    </div>

     <div class="step" data-x="-10" data-y="-1700" data-rotate-x="10" data-rotate-y="10">
        <img src="images/umbrella.png" style="height:200px"/>
    </div> 
    <div class="step slide" data-x="0" data-y="-1500" data-rotate-x="40" data-rotate-y="-30">
        <h1>Under HTML5's "umbrella"</h1> <hr /><br /><br />
            <ul>
                <li>Includes <b>redefinitions</b> of existing markup elements, and new elements that allow web designers to be more expressive in the semantics of their markup.<br /><br /></li>
                <li>Loads of new technologies and APIs.<br /><br /></li>
                <li>Additions to CSS spec</li>
              <!--   <video src="video.webm" controls></video> -->
            </ul>
    </div>

    <div class="step slide" data-x="1000" data-y="-1500">
        <q>
            <h1>Basic HTML5 spec</h1><hr />
            <img src="images/html5.png" style="height:400px" />
        </q>
    </div>

    <div class="step slide" data-x="1000" data-y="-1500" data-z="-500" data-rotate-y="90">
        <h1>The Doctype</h1><hr />
        <span>For XHTML1.0 Strict:</span>
        <div class="code">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</div><br />
        <span>For HTML4 Transitional:</span>
        <div class="code">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</div><br />
        <span>For HTML5</span>
        <div class="code">&lt;!doctype html&gt;</div>
    </div>

    <div class="step slide" data-x="500" data-y="-1500" data-z="-1000" data-rotate-y="180">
        <h1>The html element</h1><hr />
        <span>In XHTML-based syntax, you’d be required to include an xmlns attribute. In HTML5 it is not required</span>
        <div class="code">
            &lt;html lang="en"&gt;<br />
            // your html code<br />
            &lt;/html&gt;
        </div><br />
        <h1>The head</h1><hr />
        <span>To specify character encoding.</span>
        <div class="code">&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</div><br />
        <span>In HTML5:</span>
        <div class="code">&lt;meta charset="utf-8"&gt;</div>
    </div>

    <div class="step slide" data-x="70" data-y="-1500" data-z="-1500" data-rotate-y="90">
        <h1>The script and link tags</h1><hr />
        <span>In XHTML:</span>
        <div class="code">&lt;script type="text/javascript" src="script.js"&gt; &lt;/script&gt;</div><br />
        <span>In HTML5</span>
        <div class="code">&lt;script src="script.js"&gt; &lt;/script&gt;</div><br />

        <span>In XHTML:</span>
        <div class="code">&lt;link href="impress.css" type="text/css" rel="stylesheet" /&gt;</div><br />
        <span>In HTML5:</span>
        <div class="code">&lt;link href="impress.css" rel="stylesheet" /&gt;</div>
    </div>

    <div class="step slide" data-x="-810" data-y="-1500" data-z="-2000" data-rotate-y="180" data-scale="2">
        <h1>Closing tags</h1><hr />
        <span>In XHTML it is required to close tags like <b>img, link, br, hr, input</b> even though they do now contain child elements. <br />In HTML5 it is <b>optional</b>. In HTML5 both of the following are valid.</span><br />
        <div class="code">&lt;input type="text"&gt;</div>
        <div class="code">&lt;input type="text" /&gt;</div>
    </div>


    <!-- FORMS -->
    <div class="step slide" data-x="850" data-y="3000" data-scale="4">
        <q>
            <h1>HTML5 Forms</h1><hr />
            <img src="images/html5.png" style="height:400px" />
        </q>
    </div>

    <div class="step slide" data-x="4850" data-y="3700" data-rotate="20" data-scale="4">
            <h1>Overview</h1><hr />
            <ul>
                <li>HTML5 web forms have introduced new form elements, input types, attributes, and other features like form validation.</li>
                <li>By eliminating the use of javascript, HTML5 not only makes marking up forms easier on the developer, it’s also better for the user. With client-side validation being handled natively by the browser, there will be greater <b>consistency</b> across different sites, and many pages will load <b>faster</b> without all that redundant JavaScript.</li>

            </ul>
    </div>
    <div class="step slide" data-x="8400" data-y="5750" data-rotate="40" data-scale="4">
        <b>The "placeholder" Attribute</b><hr />
        <span>It allows a short <b>hint</b> to be displayed inside the form element</span><br />
        <div class="code">&lt;input type="text" placeholder="Enter here" &gt;</div>
        <input type="text" placeholder="Enter here">

        <br>

        <b>The "readonly" Attribute</b><hr />
        <div class="code">&lt;input type="text" value="readonly" readonly &gt;</div>
        <input type="text" value="readonly" readonly>

        <br>

        <b>The "multiple" Attribute</b><hr />
        <span>If present, indicates that multiple values can be entered in a form control. Unlike in older HTML, In HTML5, it can be added to email and file input as well</span>
        <div class="code">&lt;input type="file" multiple &gt;</div>
        <input type="file" multiple>
        <input type="file">
    </div>

    <div class="step slide" data-x="11000" data-y="8880" data-rotate="60" data-scale="4">
        <b>The "required" and "pattern" Attributes</b><hr />
        <span>The Boolean "required" attribute tells the browser to only submit the form if the field in question is filled out correctly.</span><br />
        <div class="code">&lt;input type="text" required&gt;</div>
        <form method="post">
           <input type="text" required>
        </form><br />
        <span>With the help of "pattern" attribute it is possible to set some rules on the input. Here is an example which takes in inputs with more than 6 characters. <i>\S refers to “any nonwhitespace character,” and {6,} means “at least six times.”</i> </span><br /><br />
        <div class="code">&lt;input type="text" required pattern="\S{6,}"&gt;</div>
        <form method="post">
            <input type="text" required pattern="\S{6,}" />
        </form><br />
    </div>

    <div class="step slide" data-x="12400" data-y="12700" data-rotate="80" data-scale="4">
        <b>New Form Input Types</b><hr />
        <ul class="small">
            <li><b>search</b>: Not any different from a normal textbox apart from the styling.<br>
                <input style="height:25px;" type="search" /></li>
            <li><b>email</b>: Has builtin validation when "required" attribute is used.
                <form method="post">
                    <input type="email" required>
                </form>
            </li>
            <li><b>url</b>: Similar to email and has builtin validation.</li>
            <li><b>tel</b>: Telephone number. Unlike the url and email types, the tel type doesn’t enforce a particular syntax or pattern.</li>
            <li><b>number</b>: This is a “spinner” box, where you can either enter a number or click on the up or down arrows to select a number.<br />
                <input type="number">
            </li>
            <li><b>range</b>: displays a slider control.
                <div class="code">&lt;input type="range" min="1" max="10"&gt;</div>
                <input type="range" min="1" max="10">
        </ul>
    </div>
    <div class="step slide" data-x="12400" data-y="16740" data-rotate="100" data-scale="4">
        <b>New Form Input Types</b><hr />
        <ul class="small">
            <li><b>color</b>: provides the user with a color picker.
                <div class="code">&lt;input type="color" value="#eeeeee"&gt;</div>
                <input type="color" value="#eeeeee">
            </li>
            <li><b>date</b>: Provides the user with a calendar.
                <div class="code">&lt;input type="date" min="1990-03-17" max="2014-05-17" value="1992-05-22"&gt;</div>
                <input type="date" min="1990-03-17" max="2014-05-17" value="1992-05-22">
            </li>
        </ul>
    </div>

    <!-- new tags -->
    <div class="step slide" data-x="6700" data-y="-300" data-scale="6">
         <q>
            <h1>New Tags</h1><hr />
            <img src="images/html5.png" style="height:400px" />
        </q>
    </div>

    <div class="step slide" data-x="6700" data-y="-300" data-z="-5000" data-rotate="40" data-scale="2">
            <b>Video and Audio</b><hr />
            <ul class="small">
                <li>By far the most popular way to embed video and audio on web pages is by means of Adobe’s Flash Player plugin. The <b>Flash Player plugin</b> was originally developed by Macromedia and is now maintained by Adobe as a result of their 2005 buy-out of the company. </li>
                <li>Before HTML5, there was no standard way to embed video into web pages. A plugin like Adobe’s Flash Player is controlled solely by Adobe, and is not open to community development.</li>
                <li>With HTML5, there’s no need for the user to <b>download third-party software</b> to view your content, and the video or audio player is easily accessible via scripting.</li>

            </ul>
            <span></span>
        </q>
    </div>
    <div class="step slide" data-x="6700" data-y="-300" data-z="-10000" data-rotate="-40" data-scale="2">
        <b>The "video" tag</b><hr />
        <div class="code">&lt;video src="video.webm" width="475" height="280" controls&gt;&lt;/video&gt;</div>
        <center><video src="video.webm" width="425" height="280" controls></video></center><br>
        <b>The "audio" tag</b><hr />
        <div class="code">&lt;audio src="popeye.mp3" controls&gt;&lt;/audio&gt;</div><br>
        <center><audio src="popeye.mp3" controls></audio></center>
    </div>

    <div class="step slide" data-x="6700" data-y="-300" data-z="-15000" data-rotate="40" data-scale="2">
        <b>The figure and figcaption Elements</b><hr />
        <div class="code"> &lt;figure&gt;<br>
            &lt;img src="umbrella.png"&gt;<br>
            &lt;figcaption&gt;A Beautiful umbrella&lt;/figcaption&gt;<br>
            &lt;/figure&gt;
        </div><br>
        <figure style="text-align:center">
            <img src="images/umbrella.png" style="width:200px">
            <figcaption style="font-size:0.5em">A Beautiful umbrella</figcaption>
        </figure><br>
        <b>"mark" tag</b><hr />
            <span>&lt;mark&gt; is used to <mark>highlight</mark> text.</span>
    </div>
    <div class="step slide" data-x="6700" data-y="-300" data-z="-20000" data-rotate="-40" data-scale="2">
        <h1>What else?</h1><hr>
        <ul>
            <li>Custom attributes and tags</li>
            <li>Geolocation</li>
            <li>Offline Web Apps using App cache</li>
            <li>Web SQL and IndexedDB</li>
            <li>Web workers: Running large scripts in the background</li>
            <li>Web Sockets</li>
        </ul>
    </div>
    <div class="step slide" data-x="8000" data-y="-1500" data-rotate-y="40">
        <q>
            <h1 style="font-size:5em;">CSS3</h1><br><hr>
        </q>
    </div>

    <div class="step slide" data-x="9000" data-y="-1500" data-rotate-y="40">
        <b>"border-radius" property</b><hr/>
        <span>It is possible to make the borders round in CSS3</span>

        <div style="width:500px;padding:10px;border-radius:25px;background:#eee;">
            -moz-border-radius: 25px;<br>
            border-radius: 25px;
        </div><br>

        <div style="width:350px;height:150px;padding:20px;border-radius:50%;background:blue;color:#fff;padding-top:200px">
            -moz-border-radius: 50%;<br>
            border-radius: 50%;
        </div>
    </div>

    <div class="step slide" data-x="10000" data-y="-1500" data-rotate-y="40">
        <b>Drop Shadow and text shadow</b><hr>
        <span>This property can be used to give shadows to objects.</span>
        <div class="code">box-shadow: [horizontal-offset] [vertical-offset] [blur-distance] [spread-distance] [color];</div><br>

        <div style="box-shadow: 2px 5px 0 0 #333;width:200px;height:100px;background:#eee;padding:5px;display:inline">
            <span> 2px 5px 0px 0px</span>
        </div><br><br>
        <div style="box-shadow: 2px 5px 5px 0 #333;width:200px;height:100px;background:#eee;padding:5px;display:inline">
            <span> 2px 5px 5px 0px</span>
        </div><br><br>
        <div style="box-shadow: 2px 5px 5px 3px #333;width:200px;height:100px;background:#eee;padding:5px;display:inline">
            <span> 2px 5px 5px 3px</span>
        </div><br><br>

        <div class="code">text-shadow: [horizontal-offset] [vertical-offset] [blur-distance] [color];</div><br>
        <div style="text-shadow:3px 3px 1px #eee;"> 3px 3px 1px</div>
    </div>

    <div class="step slide" data-x="11000" data-y="-1500" data-rotate-y="40">
        <b>Linear Gradient</b><hr>
        <span>Linear gradients are those where colors transition across a straight line: from top to bottom, left to right, or along any arbitrary axis.</span>
        <div class="code">
            background-image: linear-gradient( ... );
        </div><br>
        <span>Inside those parentheses, you specify the direction of the gradient, and then provide some color stops.</span>
        For example:
        <div class="code">background-image: linear-gradient(270deg, #FFF 0%, #000 100%);</div><br>
        <span>The following have gradient with axes 0deg, 90deg, 180deg, 270deg respectively.</span><br>
        <div style="height:200px;width:150px;background-image: linear-gradient(0deg, #FFF 0%, #000 100%);display:inline-block"></div>
        <div style="height:200px;width:150px;background-image: linear-gradient(90deg, #FFF 0%, #000 100%);display:inline-block"></div>
        <div style="height:200px;width:150px;background-image: linear-gradient(180deg, #FFF 0%, #000 100%);display:inline-block"></div>
        <div style="height:200px;width:150px;background-image: linear-gradient(270deg, #FFF 0%, #000 100%);display:inline-block"></div>
    </div>

    <div class="step slide" data-x="12000" data-y="-1500" data-rotate-y="40">
        <b>Radial Gradient</b><hr>
        <div class="code">
            background-image: radial-gradient(center, #FFF, #000);<br>
            background-image: radial-gradient(30px 30px, #FFF, #000);<br>
        </div><br>
        <center>
            <div style="height:200px;width:200px;background-image: -webkit-radial-gradient(center, #FFF, #000);display:inline-block"></div>
            <div style="height:200px;width:200px;background-image: -webkit-radial-gradient(30px 30px, #FFF, #000);display:inline-block"></div>
        </center>
    </div>

    <div class="step slide" data-x="13000" data-y="-1500" data-rotate-y="40">
        <b>Translation</b><br>
        <span>Translation functions allow you to move elements left, right, up, or down</span>
        <div class="code">
            -webkit-transform: translate(45px,-45px);<br>
            -moz-transform: translate(45px,-45px);<br>
            -ms-transform: translate(45px,-45px);<br>
            -o-transform: translate(45px,-45px);<br>
            transform: translate(45px,-45px);
        </div><br>
        <div class="translator">Hover here</div><br>

        <b>Scale</b><hr>
        <span>The scale(x,y) function scales an element by the defined factors horizontally and vertically, respectively.</span>
        <div class="code">transform: scale(1.5,0.25);</div>    
        <div class="scaler">Hover here</div>
    </div>
    <div class="step slide" data-x="14000" data-y="-1500" data-rotate-y="40">
        <b>Rotation</b><hr>
        <span>The rotate() function rotates an element around the point of origin (as with scale,
by default this is the element’s center) <b>clockwise</b>, by a specified angle value.</span>
        <div class="code">transform: rotate(10deg)</div><br>
        <b>Combining transformations</b><hr>
        <span>It is possible to combine transformations by listing them after the other</span>
        <div class="code">transform: rotate(10deg) translateX(100px) scale(1.5);</div>
        <div class="combine">Hover here</div>
    </div>

    <div class="step slide" data-x="15000" data-y="-1500" data-rotate-y="40">
        <b>Skew</b><hr>
        <span>The skew(x,y) function specifies a skew along the X and Y axes.</span>
        <div class="code">transform: skew(15deg, 4deg);</div><br>
        <div class="skew">Skewed Text</div><br>
        <b>transition-duration</b><hr>
        <span>The transition-duration property sets how long the transition will take. You can specify this either in seconds (s) or milliseconds (ms). </span>
        <div class="code">transition-duration: 0.2s;</div><br>
        <b>transition-delay</b><hr>
        <span>It introduces a delay before the animation begins. Normally, a transition begins immediately, so the default is 0.</span>
        <div class="code">transition-delay: 250ms;</div>
    </div>

    <div class="step slide" data-x="16000" data-y="-1500" data-rotate-y="40">
        <b>What else?</b><hr>
        <ul>
            <li>Relational Selectors</li>
            <li>Structural pseudo classes</li>
            <li>Embedding Web fonts</li>
            <li>Keyframes</li>
            <li>Canvas, SVG</li>
            <li>Drag and Drop</li>
        </ul>
    </div>
    <div class="step slide" data-x="17000" data-y="-1500" data-rotate-y="-40">
        <h1>Thank You</h1><br>
        <span>http://alseambusher.github.com/html5-css3-tutorial/</span>
    </div>
    <div id="overview" class="step" data-x="3000" data-y="1500" data-scale="10">
    </div>

</div>

<div class="hint">
    <p>Use a spacebar or arrow keys to navigate</p>
</div>
<script>
if ("ontouchstart" in document.documentElement) { 
    document.querySelector(".hint").innerHTML = "<p>Tap on the left or right to navigate</p>";
}
</script>

<script src="impress.js"></script>
<script>impress().init();</script>

</body>
</html>
